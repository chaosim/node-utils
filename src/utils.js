// Generated by CoffeeScript 1.6.2
(function() {
  var __slice = [].slice;

  exports.dict = function() {
    var bindings, i, result, _i, _ref;

    bindings = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    result = {};
    for (i = _i = 0, _ref = bindings.length; _i < _ref; i = _i += 2) {
      result[bindings[i]] = bindings[i + 1];
    }
    return result;
  };

  exports.assert = function(arg, message) {
    if (!arg) {
      throw new dao.Error(message || '');
    }
  };

  exports.times_string = function(str, n) {
    var i, result, _i;

    result = '';
    for (i = _i = 1; 1 <= n ? _i <= n : _i >= n; i = 1 <= n ? ++_i : --_i) {
      result += str;
    }
    return result;
  };

  exports.classeq = function(x, y) {
    return x.constructor === y.constructor;
  };

  exports.join = function(sep, list) {
    return list.join(sep);
  };

  exports.isinstance = function(x, klass) {
    return x instanceof klass;
  };

  exports.toString = function(x) {
    return x.toString();
  };

}).call(this);

/*
//@ sourceMappingURL=utils.map
*/
